
/* https://www.w3schools.com/css/default.asp link para css tools */


/* fonts: "Inter", sans-serif; -  "Bona Nova SC", serif; */

/* Medidas de css (absolutas-relativas):
absoluta: no se modifican por más que las pantallas sean diferentes (pixeles)

relativas: son adaptables a todas las pantallas
%: ayuda al contenedor a adaptarlo a diferentes pantallas  va de 0% a 100%
rem: toma de tamaño base a la fuente raiz de un documento
     suplanta al pixel y ayuda a generar un responsive                       (la que mas se usa REM)
     1rem equivale a 16px                16px = 100%    10px = 62,5%
     16px es el tamaño por defecto de las font-size de las páginas html
     usamos rem porque es más consistente, más escalable y más fácil el mantenimiento
em: toma de base no al tamaño de fuente raiz, sino toma de fuente a la etiqueta contenedora, esto quiere decir

vw (ViewWidth): hace referencia al tamaño ancho de la pantalla deonde se abra el sitio
vh (ViewHeight): hace referencia al largo   (son responsive)*/    
 

/* section {
                            absoluta
    width: 500px;
    height: 500px;
} */

/* reset */
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}


body {
    
    background-image: url("../assets/rename.jpg");
    background-attachment: fixed ;
    background-repeat: no-repeat;
    background-size: 100% 100%;   
    
    
    
    
    
    
    
    
}
section {
    width: 100%;
    height: 31.25rem; 
    
     font-size: 1.5rem;
}



section p {
    font-size: 2em;    /* 2em multiplica el font-size 1.5rem, osea 48px, si pusiera 1em, quedaría igual
                       sirve para tamaño titulo o texto */
}

/* main section p {
    color: gray; }*/

.nav-bar div {
    width: 5.625rem;
    height: 5rem;
    padding-top: .625rem;
    padding-left: .625rem;
}    

.nav-bar ul {
    padding-bottom: 20px;
}

.nav-bar ul li  {
    display: inline;
    list-style: none;
    padding: 1.25rem 1.25rem 1.25rem 1.25rem;


}   
.nav-bar ul a {
    font-family: "Inter", sans-serif;
    text-decoration: none;
    color: grey;
}

.nav-bar ul {
    text-align: end;
}

 /* ul li a { */
    



h1{
    color: rgb(95, 72, 72);
    text-align: center;
     text-transform: capitalize;   /*capitalize transofrma cada primer letra en mayuscula */
    text-shadow: 5px 5px 10px black;    /* primer atributo sombra para la izquierda, segundo sombra arriba o abajo, tercero blur */
}

.menu-principal {
background-color: rgba(115, 120, 129, 90%) ;
}

.menu-principal h2 {
    
color:blue;
text-align: center  ;
font-family: Arial, Helvetica, sans-serif;

}



.banner-principal {
    height: 14rem;
}

.banner-principal img {
    width: 100%;
    height: 14rem;
}

.produ-lago div p {
    display: inline;
    font-family: "Bona Nova SC", serif;
}



.contacto-footer {
    color: white;
    font-family: "Inter", sans-serif;
    background-color: rgb(74, 52, 72);

}





/* box modeling 
modelo de caja: nos dice que cualquier etiqueta html funciona como una caja,
cada caja puede crecer internamente, tener limites establecidos, espacio externo
que se conecta con las demás etiquetas.

contenido=>padding=>border=>margin

padding(limite interno): 20px 10px 20px 30px   (padding-top, padding-left, padding
bottom, padding-right

border(limite del elemento): border-widht (grosor), border-style (el tipo de borde)
border-color (color)
border: 1px solid red*/




footer {
    padding: .0625rem;
    border: .0313rem none red ;
    margin: .0063rem;
    
   
}


/* las etiquetas en bloque son aquellas que ocupan el 100% del ancho del 
navegador
las etiquetas en linea son las que ocupan solamente el espacio de su contenido
las etiquetas en bloque o en linea pueden cambiar su estado, a través de una
propiedad llamada display*/

/* clase-5-flexbox:       
propiedades: flex -> por defecto pone todos los elementos en una sola linea (inline)
flexbox está compuesto por dos propiedades importantes, la primera;
direction -> le da sentido al eje principal (row o column) (por defecto viene flex-direction
en row (horizontal)

flexibilidad -> */
 
.galeria-card{             /* contenedor principal */
    width: 18.75rem;
    height: 12.5rem;
    border-radius: .3125rem;
    box-shadow: .3125rem .3125rem .625rem black;
    /* margin: 1.25rem; */
}

.galeria-card .galeria-foto{          /* hijo de contenedor principal */ 
    width: 100%;
    height: 100%;

}
.galeria-container .galeria-foto img{
    width: 100%;
    height: 100%;
    object-fit: conain;  /* para ajustar visualización de imagen */
}

.galeria-container  {
    display: flex;
    background-color: brown;
    width: 100%;
    height: 28.75rem;
    flex-direction: row;            /* cuando se usa row, justify-content mueve los elementos
                                        en el eje horizontal y align-items en eje vertical
                                        cuando se usa column, en eje horizontal align items
                                        y vertical, justify-content */
    flex-wrap: wrap;   /*es para que los elementos se ajusten cuando la pantalla se achica
                           (ayuda en el responsive)*/

    /* justify-content: space-between; space-around  (espacio entre medio de cada contenedor)*/
    justify-content: space-evenly; /* espacio alrededor, sustituí el margin de .galeria-card */
    
    /* align-items: end; center; start; strech; baseline (cada uno de estos comandos, nos
    manda los items a la position que hayamos elegido dentro del contenedor) */ 
    /* gap: se usa para espacio entre elementos, yo usé justify-content: space evenly; */
    /* align-content: funciona cuando está el wrap activado, hace que se muevan cuando
    achico la pantalla a la propiedad que elija (center, end, start, etc)*/
    align-items: center;
}

/* propiedades individuales: */

.foto1 {
    align-self: flex-start;
    order: 3;                  /* por default la etiqueta más cerca del padre es la orden 1
                                    y así consecutivamente, con el comando order lo puedo 
                                    cambiar como yo quiera, por ejemplo ahí cambie la
                                    imagen 1 por la 3 */
}

.foto2 {
    align-self: flex-end;
    order: 2;
}

.foto3 {
    align-self: flex-start;
    order: 1;
}
  
.foto4 {
    align-self: flex-end;
    order: 4;
}




